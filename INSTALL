First, build the library and executable:

cd src/lib
make
cd ../bin
make lse.elf

Choose the openocd configuration that matches your dongle/
processor combination. As of this writing, there are two
available, so either:

ln -s sam7x256+signalyzer.cfg  openocd.cfg

or

ln -s sam7x256+jtagkey.cfg  openocd.cfg

Plug your dongle into the computer, and into the 20 pin JTAG
connector on the board. Power up the board by plugging in its
USB cable. Then start up the openocd server:

sudo openocd

You should see something like:

Open On-Chip Debugger 0.1.0 (2009-03-05-11:35) Release


BUGS? Read http://svn.berlios.de/svnroot/repos/openocd/trunk/BUGS


$URL: https://kc8apf@svn.berlios.de/svnroot/repos/openocd/tags/openocd-0.1.0/src/openocd.c $
Info : JTAG tap: sam7x256.cpu tap/device found: 0x3f0f0f0f (Manufacturer: 0x787, Part: 0xf0f0, Version: 0x3)
Info : JTAG Tap/device matched
Warn : no telnet port specified, using default port 4444
Warn : no gdb port specified, using default port 3333
Warn : no tcl port specified, using default port 6666

Then, in another terminal window:

telnet localhost 4444
halt
flash write_image lse.elf 0x100000
shutdown

This will load the lse image into the processor's flash memory.
The actual write_image operation will take ~8 seconds.

